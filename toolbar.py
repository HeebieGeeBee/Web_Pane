from PyQt5.QtWidgets import QToolBar, QAction


class GridToolbar(QToolBar):
    def __init__(self, mainWidget):
        super().__init__()
        self.mainWidget = mainWidget

        one_by_one = QAction('1 x 1', self)
        one_by_two = QAction('1 x 2', self)
        one_by_three = QAction('1 x 3', self)
    #    one_by_four = QAction('1 x 4', self)
        two_by_one = QAction('2 x 1', self)
        two_by_two = QAction('2 x 2', self)
        two_by_three = QAction('2 x 3', self)
    #    two_by_four = QAction('2 x 4', self)
        three_by_one = QAction('3 x 1', self)
        three_by_two = QAction('3 x 2', self)
        three_by_three = QAction('3 x 3', self)
    #    three_by_four = QAction('3 x 4', self)
    #    four_by_one = QAction('4 x 1', self)
    #    four_by_two = QAction('4 x 2', self)
    #    four_by_three = QAction('4 x 3', self)
    #    four_by_four = QAction('4 x 4', self)

        one_by_one.setStatusTip('Set grid layout to 1 x 1')
        one_by_two.setStatusTip('Set grid layout to 1 x 2')
        one_by_three.setStatusTip('Set grid layout to 1 x 3')
    #    one_by_four.setStatusTip('Set grid layout to 1 x 4')
        two_by_one.setStatusTip('Set grid layout to 2 x 1') 
        two_by_two.setStatusTip('Set grid layout to 2 x 2')
        two_by_three.setStatusTip('Set grid layout to 2 x 3')
    #    two_by_four.setStatusTip('Set grid layout to 2 x 4')
        three_by_one.setStatusTip('Set grid layout to 3 x 1')
        three_by_two.setStatusTip('Set grid layout to 3 x 2')
        three_by_three.setStatusTip('Set grid layout to 3 x 3')
    #    three_by_four.setStatusTip('Set grid layout to 3 x 4')
    #    four_by_one.setStatusTip('Set grid layout to 4 x 1')
    #    four_by_two.setStatusTip('Set grid layout to 4 x 2')
    #    four_by_three.setStatusTip('Set grid layout to 4 x 3')
    #    four_by_four.setStatusTip('Set grid layout to 4 x 4')
        
        one_by_one.triggered.connect(lambda: self.onGridButtonClick(1, 1))
        one_by_two.triggered.connect(lambda: self.onGridButtonClick(1, 2))
        one_by_three.triggered.connect(lambda: self.onGridButtonClick(1, 3))
    #    one_by_four.triggered.connect(lambda: self.onGridButtonClick(1, 4))
        two_by_one.triggered.connect(lambda: self.onGridButtonClick(2, 1))
        two_by_two.triggered.connect(lambda: self.onGridButtonClick(2, 2))
        two_by_three.triggered.connect(lambda: self.onGridButtonClick(2, 3))
    #    two_by_four.triggered.connect(lambda: self.onGridButtonClick(2, 4))
        three_by_one.triggered.connect(lambda: self.onGridButtonClick(3, 1))
        three_by_two.triggered.connect(lambda: self.onGridButtonClick(3, 2))
        three_by_three.triggered.connect(lambda: self.onGridButtonClick(3, 3))
    #    three_by_four.triggered.connect(lambda: self.onGridButtonClick(3, 4))
    #    four_by_one.triggered.connect(lambda: self.onGridButtonClick(4, 1))
    #    four_by_two.triggered.connect(lambda: self.onGridButtonClick(4, 2))
    #    four_by_three.triggered.connect(lambda: self.onGridButtonClick(4, 3))
    #    four_by_four.triggered.connect(lambda: self.onGridButtonClick(4, 4))
        
        
        self.addAction(one_by_one)
        self.addAction(one_by_two)
        self.addAction(one_by_three)
    #    self.addAction(one_by_four)
        self.addAction(two_by_one)
        self.addAction(two_by_two)
        self.addAction(two_by_three)
   #     self.addAction(two_by_four)
        self.addAction(three_by_one)
        self.addAction(three_by_two)
        self.addAction(three_by_three)
   #     self.addAction(three_by_four)
   #     self.addAction(four_by_one)
    #    self.addAction(four_by_two)
    #    self.addAction(four_by_three)
    #    self.addAction(four_by_four)

    def onGridButtonClick(self, num1, num2):
     #   self.main_widget.layout = QGridLayout()
     #   self.main_widget.createLayout((num1, num2))
        self.mainWidget.populateGrid((num1, num2))

        print('Click')
